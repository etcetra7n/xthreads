let admin=require("firebase-admin"),serviceAccount=require("../xthreadspro-firebase-adminsdk-ty40a-3df7f647f5.json"),db=(admin.apps.length||admin.initializeApp({credential:admin.credential.cert(serviceAccount)}),admin.firestore());function enterUserToDatabase(i){try{let e="";var a=db.collection("users").doc(i.uid);return a.get().exists?(a.update({last_login_time:admin.firestore.FieldValue.serverTimestamp(),no_of_logins:admin.firestore.FieldValue.increment(1)}),e=a.get("plan")):(e="basic",a.set({name:i.name,last_login_time:admin.firestore.FieldValue.serverTimestamp(),email:i.email,uid:i.uid,picture:i.picture,plan:"basic",last_plan_purchase_time:admin.firestore.FieldValue.serverTimestamp(),no_of_logins:1,account_creation_time:admin.firestore.FieldValue.serverTimestamp()})),e}catch(e){throw e}}exports.handler=async(e,i)=>{var a={"Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type"};if("OPTIONS"==e.httpMethod)return{statusCode:200,headers:a,body:JSON.stringify({message:"success"})};e=JSON.parse(e.body).userIdToken;try{var r=await admin.auth().verifyIdToken(e),t=enterUserToDatabase(await r);return await{statusCode:200,headers:a,body:JSON.stringify({email:r.email,uid:r.uid,name:r.name,picture:r.picture,plan:t})}}catch(e){return console.error("Error verifying ID token:",e),{statusCode:401,headers:a,body:JSON.stringify({message:"Invalid"})}}};